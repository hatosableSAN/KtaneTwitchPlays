<?xml version="1.0"?>
<doc>
    <assembly>
        <name>TwitchPlaysAssembly</name>
    </assembly>
    <members>
        <member name="T:AlarmClockCommands">
            <summary>目覚まし時計用コマンド</summary>
            <prefix>alarm </prefix>
        </member>
        <member name="M:AlarmClockCommands.Snooze(TwitchHoldable,System.String,System.Boolean)">
            <name>Snooze</name>
            <syntax>snooze</syntax>
            <summary>スヌーズボタンを押す</summary>
        </member>
        <member name="M:AlarmClockCommands.SnoozeMultiple(TwitchHoldable,System.String,System.Boolean,System.Int32)">
            <name>Snooze Multiple</name>
            <syntax>snooze [times]</syntax>
            <summary>指定回数スヌーズを押す。上限50回。</summary>
        </member>
        <member name="T:BombCommands">
            <summary>爆弾に関するコマンド</summary>
            <prefix>bomb </prefix>
        </member>
        <member name="M:BombCommands.Help(System.String,System.Boolean)">
            <name>Help</name>
            <syntax>help</syntax>
            <summary>いろんなヘルプを表示する。</summary>
        </member>
        <member name="M:BombCommands.TurnBomb(TwitchBomb)">
            <name>Turn</name>
            <syntax>turn</syntax>
            <summary>爆弾を裏返しにさせる。</summary>
        </member>
        <member name="M:BombCommands.Hold(TwitchBomb)">
            <name>Hold</name>
            <syntax>hold</syntax>
            <summary>爆弾を持つ</summary>
        </member>
        <member name="M:BombCommands.Drop(TwitchBomb)">
            <name>Drop</name>
            <syntax>drop</syntax>
            <summary>爆弾を置く。</summary>
        </member>
        <member name="M:BombCommands.Throw(TwitchBomb,System.Nullable{System.Int32})">
            <name>Throw</name>
            <syntax>throw (strength)</syntax>
            <summary>爆弾を投げる。数字オプションで、投げる強さを決められる。(デフォルトは5)</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:BombCommands.EdgeworkElevator(TwitchBomb,System.String,System.String,System.Boolean)">
            <name>Elevator Edgework</name>
            <syntax>edgework (wall)</syntax>
            <summary>エレベーター内のエッジワークを表示する。壁は左右/背後のいずれかを指定する。</summary>
            <restriction>ElevatorOnly</restriction>
        </member>
        <member name="M:BombCommands.Edgework(TwitchBomb,System.String,System.String,System.Boolean)">
            <name>Edgework</name>
            <syntax>edgework (edge)\nedgework 45</syntax>
            <summary>爆弾を回転させてエッジワークを表示する。edgeは、爆弾のどの辺を表示するかを示す。45を使うと、爆弾を45度回転させる。</summary>
            <restriction>ElevatorDisallowed</restriction>
        </member>
        <member name="M:BombCommands.Time(TwitchBomb,System.String,System.Boolean)">
            <name>Time</name>
            <syntax>time</syntax>
            <summary>残り時間を表示する。</summary>
        </member>
        <member name="M:BombCommands.Timestamp(TwitchBomb,System.String,System.Boolean)">
            <name>Timestamp</name>
            <syntax>timestamp</syntax>
            <summary>爆弾が起動した日を表示する。</summary>
        </member>
        <member name="M:BombCommands.Explode(TwitchBomb,System.String,System.Boolean)">
            <name>End Training Mode</name>
            <syntax>endtrainingmode</syntax>
            <summary>トレーニングモードを終了する。ホワイトリスト登録者であるか、一定数のポイントが必要。</summary>
        </member>
        <member name="M:BombCommands.Explode(TwitchBomb)">
            <name>Explode</name>
            <syntax>explode</syntax>
            <summary>強制爆発させる。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:BombCommands.VoteStart(System.String,System.Boolean)">
            <name>Start a vote</name>
            <syntax>vote [action]</syntax>
            <summary>強制爆発投票を行う。</summary>
        </member>
        <member name="M:BombCommands.Vote(System.String,System.Boolean)">
            <name>Vote</name>
            <syntax>vote [choice]</syntax>
            <summary>はい/いいえで投票する。</summary>
        </member>
        <member name="M:BombCommands.RemoveVote(System.String)">
            <name>Remove vote</name>
            <syntax>vote remove</syntax>
            <summary>投票を削除する。</summary>
        </member>
        <member name="M:BombCommands.ShowVoteTime(System.String)">
            <name>Time left of vote</name>
            <syntax>vote time</syntax>
            <summary>残り投票可能時間を表示する。</summary>
        </member>
        <member name="M:BombCommands.CancelVote(System.String)">
            <name>Cancel vote</name>
            <syntax>vote cancel</syntax>
            <summary>投票をキャンセルする。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:BombCommands.ForceEndVote(System.String)">
            <name>Force-end vote</name>
            <syntax>vote forceend</syntax>
            <summary>投票を強制的に締め切る。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:BombCommands.Status(TwitchBomb,System.String,System.Boolean)">
            <name>Status</name>
            <syntax>status</syntax>
            <summary>爆弾の情報(時間、ミス数、解除数)を表示する。</summary>
        </member>
        <member name="M:BombCommands.Pause(TwitchBomb)">
            <name>Pause</name>
            <syntax>pause</syntax>
            <summary>カウントダウンタイマーを一時停止する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:BombCommands.Unpause(TwitchBomb)">
            <name>Unpause</name>
            <syntax>unpause</syntax>
            <summary>カウントダウンタイマーを再度動かす。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:BombCommands.ChangeTimer(TwitchBomb,System.String,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <name>Change Timer</name>
            <syntax>add time [time]\nsubtract time [time]\nset time [time]</syntax>
            <summary>爆弾の時間を加算/減算/設定する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:BombCommands.ChangeStrikeParameter(TwitchBomb,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Int32)">
            <name>Change Strikes / Strike Limit</name>
            <syntax>add strikes [strikes]\nsubtract strikes [strikes]\nset strikes [strikes]</syntax>
            <summary>ミスの回数を加算/減算/設定する。strikelimitに置き換えるとミスの最大回数を変更できる。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="T:CommandAttribute">
            <summary>Twitch Playsシステムが理解できるコマンドの分類</summary>
        </member>
        <member name="P:CommandAttribute.Regex">
            <summary>
                コマンドのすべての形式にマッチする正規表現。コマンドのどの部分にマッチするかに注意すること。
                この正規表現は、コマンドのタイプ（共通、モジュール、 爆弾、持ち上げ可能物）によって異なる。</summary>
        </member>
        <member name="P:CommandAttribute.AccessLevel">
            <summary>このコマンドを使用するために必要なアクセス権限。</summary>
        </member>
        <member name="P:CommandAttribute.AccessLevelAnarchy">
            <summary>アナーキーモード中にこのコマンドを使用するために必要なアクセス権限。</summary>
        </member>
        <member name="M:CommandAttribute.#ctor(System.String,AccessLevel,AccessLevel)">
            <summary>Constructor.</summary>
        </member>
        <member name="T:SolvedAllowedAttribute">
            <summary>モジュールのコマンドを、そのモジュールが解除済みであっても使用できるコマンドとしてマークする。</summary>
        </member>
        <member name="T:ElevatorOnlyAttribute">
            <summary>エレベータールームでのみ使用可能な爆弾コマンドまたはゲームコマンドを指定する。</summary>
        </member>
        <member name="T:ElevatorDisallowedAttribute">
            <summary>エレベータールームで使用できない爆弾コマンドやゲームコマンドを指定する。</summary>
        </member>
        <member name="T:DebuggingOnlyAttribute">
            <summary>EnableDebuggingCommandsが有効な場合にのみ使用できるコマンドを指定する。</summary>
        </member>
        <member name="T:DMGCommands">
            <summary>DMGで使えるコマンド</summary>
            <prefix>dmg </prefix>
        </member>
        <member name="M:DMGCommands.Run(System.String,System.String)">
            <name>Run</name>
            <syntax>run</syntax>
            <summary>特定のテキストでDMGを実行する。トレーニングモードであるかAdmin権限所有者のみ利用できる。</summary>
        </member>
        <member name="T:DossierCommands">
            <summary>メニューバインダー関連のコマンド</summary>
            <prefix>dossier </prefix>
        </member>
        <member name="M:DossierCommands.Select(FloatingHoldable,System.String)">
            <name>Select</name>
            <syntax>select</syntax>
            <summary>現在選択中のアイテムを選ぶ。</summary>
        </member>
        <member name="M:DossierCommands.SelectIndex(FloatingHoldable,System.String,System.Int32)">
            <name>Select Index</name>
            <syntax>select [index]</syntax>
            <summary>メニュー内の上からindex番目のアイテムを選ぶ。</summary>
        </member>
        <member name="M:DossierCommands.Navigate(System.String,System.Nullable{System.Int32})">
            <name>Up / Down</name>
            <syntax>up (amount)\ndown (amount)</syntax>
            <summary>特定の回数バインダー内を上下に移動する。</summary>
        </member>
        <member name="T:FreeplayCommands">
            <summary>フリープレイのケースに関するコマンド</summary>
            <prefix>freeplay </prefix>
        </member>
        <member name="M:FreeplayCommands.Needy(FloatingHoldable,System.Boolean,System.String,System.Boolean)">
            <name>Needy</name>
            <syntax>needy on\nneedy off</syntax>
            <summary>特殊モジュールのスイッチを操作する。</summary>
        </member>
        <member name="M:FreeplayCommands.Hardcore(FloatingHoldable,System.Boolean,System.String,System.Boolean)">
            <name>Hardcore</name>
            <syntax>hardcore on\nhardcore off</syntax>
            <summary>ハードコアのスイッチを操作する。</summary>
        </member>
        <member name="M:FreeplayCommands.ModsOnly(FloatingHoldable,System.Boolean,System.String,System.Boolean)">
            <name>Mods Only</name>
            <syntax>mods only\nmods only off</syntax>
            <summary>MODのみを使用するかどうか選択する。</summary>
        </member>
        <member name="M:FreeplayCommands.ChangeTimerHours(FloatingHoldable,System.Int32,System.Int32,System.Int32)">
            <name>Set Time</name>
            <syntax>time (hours):[minutes]:[seconds]</syntax>
            <summary>爆弾の時間を設定する。</summary>
        </member>
        <member name="M:FreeplayCommands.ChangeBombCount(FloatingHoldable,System.Int32)">
            <name>Set Bombs</name>
            <syntax>bombs [bombs]</syntax>
            <summary>爆弾の個数を設定する。</summary>
        </member>
        <member name="M:FreeplayCommands.ChangeModuleCount(FloatingHoldable,System.Int32)">
            <name>Set Modules</name>
            <syntax>modules [modules]</syntax>
            <summary>モジュール数を設定する。</summary>
        </member>
        <member name="M:FreeplayCommands.Start(FloatingHoldable)">
            <name>Start</name>
            <syntax>start</syntax>
            <summary>ゲームを開始する。</summary>
        </member>
        <member name="M:FreeplayCommands.StartAdvanced(FloatingHoldable,System.String,System.String,System.String,System.Boolean)">
            <name>Advanced Set / Start</name>
            <syntax>set [parameters]\nstart [parameters]</syntax>
            <summary>一括でパラメーターを設定する。Startでそのまま起動もできる。パラメーターは以下のいずれかを組み合わせる：(hours):[minutes]:[seconds], [#] bombs, [#] modules, hardcore, modsonly, needy.</summary>
        </member>
        <member name="T:GameCommands">
            <summary>ゲーム中のコマンド</summary>
        </member>
        <member name="M:GameCommands.Cancel">
            <name>Cancel</name>
            <syntax>cancel</syntax>
            <summary>現在実行中のコマンドをキャンセルする。</summary>
        </member>
        <member name="M:GameCommands.Stop">
            <name>Stop</name>
            <syntax>stop</syntax>
            <summary>現在のキュー追加済みコマンドを停止する。</summary>
        </member>
        <member name="M:GameCommands.ShowNotes(System.Int32,System.String,System.Boolean)">
            <name>Get Notes</name>
            <syntax>notes[note]</syntax>
            <summary>メモの内容をチャットに送る。</summary>
            <argument name="note">The note's number.</argument>
        </member>
        <member name="M:GameCommands.SetNotes(System.Int32,System.String,System.String,System.Boolean)">
            <name>Set Notes</name>
            <syntax>notes[note] [contents]</syntax>
            <summary>メモを記入する。</summary>
            <argument name="note">The note's number.</argument>
            <argument name="contents">New text of the note.</argument>
        </member>
        <member name="M:GameCommands.SetNotesAppend(System.Int32,System.String,System.String,System.Boolean)">
            <name>Append Notes</name>
            <syntax>notes[note]append [contents]</syntax>
            <summary>メモの末尾に追加する。</summary>
            <argument name="note">The note's number.</argument>
            <argument name="contents">The text that will be appended to the note.</argument>
        </member>
        <member name="M:GameCommands.SetNotesClear(System.Int32,System.String,System.Boolean)">
            <name>Clear Notes</name>
            <syntax>notes[note]clear</syntax>
            <summary>メモの中身を削除する。</summary>
            <argument name="note">The note's number.</argument>
        </member>
        <member name="M:GameCommands.Snooze">
            <name>Snooze</name>
            <syntax>snooze</syntax>
            <summary>アラームを一時停止する。</summary>
        </member>
        <member name="M:GameCommands.ShowClaimsOfAnotherPlayer(System.String,System.String,System.Boolean)">
            <name>Show Claims</name>
            <syntax>claims [user]</syntax>
            <summary>あるユーザーのモジュール割り当てを見る。</summary>
            <argument name="user">The user whose claims you want to see.</argument>
        </member>
        <member name="M:GameCommands.ShowClaims(System.String,System.Boolean)">
            <name>Claims</name>
            <syntax>claims</syntax>
            <summary>自分のモジュール割り当てを見る。</summary>
        </member>
        <member name="M:GameCommands.ClaimViewPin(System.String,System.Boolean,System.String,System.String,System.Boolean)">
            <name>Claim View Pin</name>
            <syntax>claim (what)\nview (what)\npin (what)\n(actions) (what)</syntax>
            <summary>モジュールをまとめて割り当て、表示、ピン留めする。(actions) は、claim, view、pin のいずれかをスペースで分けて入力する。</summary>
            <argument name="actions">A combination of claim, view or pin seperated by spaces.</argument>
            <argument name="what">アクションを実行するモジュールコードのリスト。すべての未解除モジュールに対してアクションを実行するには、「all」を指定する。</argument>
        </member>
        <member name="M:GameCommands.ClaimAny(System.String,System.String,System.Boolean,System.Boolean,System.String,System.Boolean)">
            <name>Claim Any</name>
            <syntax>claim [source]\nclaim [source] view</syntax>
            <summary>未解除かつ未割り当てのモジュールをランダムに割り当てる。</summary>
            <argument name="source">The source of the modules to pick from. any for any module, van for vanilla and mod for modded modules.</argument>
        </member>
        <member name="M:GameCommands.UnclaimAll(System.String,System.Boolean)">
            <name>Unclaim All</name>
            <syntax>unclaim all\nunclaim queued</syntax>
            <summary>割り当て済み/割り当てのキュー追加済みであるモジュールの割り当てを全解除する。unclaim queuedの場合、割り当てのキュー追加済みであるモジュールのみを解除する。</summary>
        </member>
        <member name="M:GameCommands.UnclaimSpecific(System.String,System.String,System.Boolean)">
            <name>Unclaim Specific</name>
            <syntax>unclaim [what]</syntax>
            <summary>モジュールの割り当てをまとめて解除する。</summary>
            <argument name="what">A list of module codes to unclaim.</argument>
        </member>
        <member name="M:GameCommands.ListUnclaimed(System.String,System.Boolean)">
            <name>Unclaimed</name>
            <syntax>unclaimed</syntax>
            <summary>未割り当てのモジュールを最大3つ表示する。</summary>
        </member>
        <member name="M:GameCommands.ListUnsolved(System.String,System.Boolean)">
            <name>Unsolved</name>
            <syntax>unsolved</syntax>
            <summary>未解除のモジュールを最大3つ表示する。</summary>
        </member>
        <member name="M:GameCommands.FindClaimView(System.String,System.String,System.String,System.Boolean)">
            <name>Find Claim View</name>
            <syntax>find (actions) [what]</syntax>
            <summary>モジュール名(英名)に基づいてモジュールを検索する。カンマ、セミコロンで分割して複数検索(OR検索)も可能である。findの後に行動を入れて、一致したモジュールに対してアクションを行うことも出来る。</summary>
            <argument name="actions">A combination of claim or view seperated by spaces.</argument>
            <argument name="what">Partial module names seperated by commas or semicolons.</argument>
        </member>
        <member name="M:GameCommands.FindPlayer(System.String,System.String,System.Boolean)">
            <name>Find Player</name>
            <syntax>findplayer [what]</syntax>
            <summary>そのモジュールを割り当てられている人を検索する。[what]には、カンマやセミコロンで区切ってモジュール名(部分検索OK)を指定できる。</summary>
            <argument name="what">A combination of claim or view seperated by spaces.</argument>
        </member>
        <member name="M:GameCommands.FindSolved(System.String,System.String,System.Boolean)">
            <name>Find Solved</name>
            <syntax>findsolved [what]</syntax>
            <summary>そのモジュール解除した人を検索する。[what]には、カンマやセミコロンで区切ってモジュール名(部分検索OK)を指定できる。</summary>
            <argument name="what">A combination of claim or view seperated by spaces.</argument>
        </member>
        <member name="M:GameCommands.FindDuplicate(System.String,System.String,System.Boolean)">
            <name>Find Duplicate</name>
            <syntax>findduplicate (what)</syntax>
            <summary>重複しているモジュールを検索する。[what]には、カンマやセミコロンで区切ってモジュール名(部分検索OK)を指定できる。指定がない場合、すべてのモジュールから検索する。</summary>
            <argument name="what">A combination of claim or view seperated by spaces.</argument>
        </member>
        <member name="M:GameCommands.NewBomb(System.String,System.Boolean)">
            <name>New Bomb</name>
            <syntax>newbomb</syntax>
            <summary>トレーニングモードで新しい爆弾を開始する。実行には一定ポイントの獲得または「処理担当者」以上の権限が必要である。</summary>
        </member>
        <member name="M:GameCommands.FillEdgework(System.String,System.Boolean)">
            <name>Fill Edgework</name>
            <syntax>filledgework</syntax>
            <summary>テキストベースでエッジワークを表示する。モデレーター権限以上かTwitchplaySettingsにて全員に許可する必要がある。</summary>
        </member>
        <member name="M:GameCommands.EdgeworkElevator(System.String,System.String,System.Boolean)">
            <name>Elevator Edgework</name>
            <syntax>edgework (wall)</syntax>
            <summary>エレベーター上にあるエッジワークを表示する。(wall)は表示したい壁の面を指定する。例：right, left, back</summary>
            <restriction>ElevatorOnly</restriction>
        </member>
        <member name="M:GameCommands.Edgework(System.String,System.String,System.Boolean)">
            <name>Edgework</name>
            <syntax>edgework (edge)\nedgework 45</syntax>
            <summary>エッジワークを見るために爆弾を回転させる。(edge)は表示したい壁の面を指定する。例：top, top left。45度回転させる場合は、45と入力する。</summary>
            <restriction>ElevatorDisallowed</restriction>
        </member>
        <member name="M:GameCommands.CameraWall(System.String,System.String)">
            <name>Camera Wall</name>
            <syntax>camerawall [mode]</syntax>
            <summary>カメラウォールのモードをオン、オフ、自動のいずれかに設定する。自動カメラウォールが有効な場合、使用するにはMODランクが必要。</summary>
            <argument name="mode">The mode of the camera wall. Can be on, off or auto.</argument>
        </member>
        <member name="M:GameCommands.EnqueueNamedCommand(IRCMessage,System.String,System.String)">
            <name>Queue Named Command</name>
            <syntax>queue [name] [command]</syntax>
            <summary>名前付きのコマンドをキューに追加する。</summary>
        </member>
        <member name="M:GameCommands.EnqueueUnnamedCommand(IRCMessage,System.String)">
            <name>Queue Command</name>
            <syntax>queue [command]</syntax>
            <summary>順番に呼び出したいコマンドをキューに追加する。</summary>
        </member>
        <member name="M:GameCommands.UnqueueCommand(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.String)">
            <name>Unqueue/Show Command</name>
            <syntax>unqueue [command]\ndelqueue [command]\nshowqueue [command]</syntax>
            <summary>キューに入っているコマンドを削除、表示する。Unqueueは自分のコマンドだけを削除することができる。delqueueはモデレーターだけの操作であり、どんなコマンドでも削除することができる。</summary>
            <argument name="command">The command to find in the queue. Can be "all" for all of your commands or just all commands if delqueue is being used.</argument>
        </member>
        <member name="M:GameCommands.QueueEnabled(System.String)">
            <name>Queue On/Off</name>
            <syntax>queue on\nqueue off</syntax>
            <summary>キューをオン/オフにし、キューが必要かどうかを他の人に知らせる。</summary>
        </member>
        <member name="M:GameCommands.CallQueuedCommand(System.String,System.Boolean,System.String)">
            <name>Call Command</name>
            <syntax>call (name)\ncallnow (name)</syntax>
            <summary>キューに追加されたコマンドをコールする。callnow は、CallSet で設定された要件をスキップする。(name)が指定された場合は、キュー内の次のコマンドの代わりに、指定されたコマンドを呼び出す。</summary>
        </member>
        <member name="M:GameCommands.CallAllQueuedCommands(System.String,System.Boolean,System.Boolean)">
            <name>Call All</name>
            <syntax>callall\ncallall force</syntax>
            <summary>無名のコマンドをすべてキューからコールする。forceをつけると、名前付きコマンドもコールされる。</summary>
        </member>
        <member name="M:GameCommands.CallSetCommand(System.String,System.Int32)">
            <name>Call Set</name>
            <syntax>callset [minimum]</syntax>
            <summary>コマンドのコールに必要な!callの最小回数を設定する。</summary>
        </member>
        <member name="M:GameCommands.CallCountCommand">
            <name>Call Count</name>
            <syntax>callcount</syntax>
            <summary>最後にコールされたコマンドから数えて、!Callが実行された回数を表示する。</summary>
        </member>
        <member name="M:GameCommands.DeleteQueuedPlayer(System.String,System.String)">
            <name>Delete Call</name>
            <syntax>delcall [user]</syntax>
            <summary>ユーザーのコールを取り消す。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GameCommands.RemoveCalledPlayer(System.String)">
            <name>Uncall</name>
            <syntax>uncall</syntax>
            <summary>複数のコールコマンドが必要な際に、コールコマンドを取り消す。</summary>
        </member>
        <member name="M:GameCommands.ListCalledPlayers">
            <name>Call Players</name>
            <syntax>callplayers</syntax>
            <summary>複数のコールが必要な際、現在コールしているプレイヤーをリストアップする。</summary>
        </member>
        <member name="M:GameCommands.DeleteCallInformation(System.Boolean)">
            <name>Delete All Calls</name>
            <syntax>delcallall</syntax>
            <summary>すべてのコールを削除する。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GameCommands.SetMultiplier(System.Single)">
            <name>Set Multiplier</name>
            <syntax>setmultiplier [multiplier]</syntax>
            <summary>倍率を設定する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GameCommands.SolveBomb">
            <name>Solve Bomb</name>
            <syntax>solvebomb</syntax>
            <summary>現在持っている爆弾を解除する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GameCommands.EnableClaims">
            <name>Enable Claims</name>
            <syntax>enableclaims</syntax>
            <summary>モジュールの割り当てを有効にする。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GameCommands.DisableClaims">
            <name>Disable Claims</name>
            <syntax>disableclaims</syntax>
            <summary>モジュールの割り当てを無効にする。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GameCommands.AssignModuleTo(System.String,System.String,System.String)">
            <name>Assign</name>
            <syntax>assign [user] [codes]</syntax>
            <summary>モジュール番号を指定してユーザーにモジュールを振り分ける。</summary>
        </member>
        <member name="M:GameCommands.BotUnclaim">
            <name>Bot Unclaim</name>
            <syntax>bot unclaim</syntax>
            <summary>ボットに割り当てられたモジュールの割り当てを解除する。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GameCommands.DisableInteractive">
            <name>Disable Interactive</name>
            <syntax>disableinteractive</syntax>
            <summary>カメラのインタラクティブ・モードを無効にする。Escキーが押されなかったときのように画面が固定される。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GameCommands.ReturnToSetup">
            <name>Return To Setup</name>
            <syntax>returntosetup</syntax>
            <summary>事務所に戻る。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GameCommands.EnableInteractiveMode">
            <name>Enable Interactive Mode</name>
            <syntax>enableinteractivemode</syntax>
            <summary>インタラクティブ・モードを有効にする。「Streamer」権限を持つ人のみ可能。</summary>
            <restriction>Streamer</restriction>
        </member>
        <member name="M:GameCommands.DisableInteractiveMode">
            <name>Disable Interactive Mode</name>
            <syntax>disableinteractivemode</syntax>
            <summary>インタラクティブモードを無効にし、配信者が爆弾を操作できないようにする。</summary>
            <restriction>Streamer</restriction>
        </member>
        <member name="M:GameCommands.SolveUnsupportedModules">
            <name>Solve Unsupported Modules</name>
            <syntax>solveunsupportedmodules</syntax>
            <summary>TP未対応のモジュールを解除する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GameCommands.SolveBossModules">
            <name>Solve Boss Modules</name>
            <syntax>solvebossmodules</syntax>
            <summary>爆弾の解除数に依存するモジュールや、マニュアルページのリポジトリ上ボスモジュールとみなされるモジュールを解除する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GameCommands.DefaultCommand(System.String,System.String,System.Boolean)">
            <name>Custom Messages</name>
            <syntax>ttks\nttksleft\nttksright\ninfozen\nqhelp</syntax>
            <summary>あらかじめ定義されたメッセージをチャットに送信します。配信者はTwitchPlaySettings.jsonにてメッセージをカスタマイズできるが、ここで紹介したものはデフォルトで含まれている。</summary>
        </member>
        <member name="M:GameCommands.Mission(System.String,System.String,System.Boolean)">
            <name>Show Mission Name</name>
            <syntax>status\nmission</syntax>
            <summary>現在進行中のミッションを表示する。</summary>
        </member>
        <member name="T:GlobalCommands">
            <summary>いつでも使えるコマンド</summary>
        </member>
        <member name="M:GlobalCommands.Help(System.String,System.Boolean)">
            <name>Help</name>
            <syntax>help</syntax>
            <summary>TPのやり方について説明する。</summary>
        </member>
        <member name="M:GlobalCommands.CurrentTime(System.String,System.Boolean)">
            <name>Date</name>
            <syntax>date</syntax>
            <summary>現在の日時を表示する。</summary>
        </member>
        <member name="M:GlobalCommands.Manual(System.String,System.String,System.Boolean)">
            <name>Manual</name>
            <syntax>manual [module]</syntax>
            <summary>特定のモジュールのマニュアルを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.BonusPoints(System.String,System.Int32,System.String)">
            <name>Bonus Points</name>
            <syntax>bonuspoints [player] [points]</syntax>
            <summary>プレイヤーに手動でポイントを追加する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.BonusSolves(System.String,System.Int32,System.String)">
            <name>Bonus Solves</name>
            <syntax>bonussolves [player] [solves]</syntax>
            <summary>プレイヤーに手動で解除数を追加する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.BonusStrikes(System.String,System.Int32,System.String)">
            <name>Bonus Strikes</name>
            <syntax>bonusstrikes [player] [strikes]</syntax>
            <summary>プレイヤーに手動でミスを追加する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.StrikeRefund(System.String,System.Nullable{System.Int32},System.String)">
            <name>Strike Refund</name>
            <syntax>srefund [user] (count)</syntax>
            <summary>プレイヤーのミスを取り消す。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.StrikeTransfer(System.String,System.String,System.Nullable{System.Int32},System.String)">
            <name>Strike Transfer</name>
            <syntax>stransfer [user] to [user] (count)</syntax>
            <summary>プレイヤー1からプレイヤー2へミスを移動させる。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.SetReward(System.Int32)">
            <name>Set Reward</name>
            <syntax>reward [points]</syntax>
            <summary>爆弾解除の報酬を設定する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.AddReward(System.Int32)">
            <name>Add Reward</name>
            <syntax>bonusreward [points]</syntax>
            <summary>爆弾解除の報酬を追加する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.TimeMode(System.Boolean,System.Boolean,System.String,System.Boolean)">
            <name>Time Mode</name>
            <syntax>timemode [state]</syntax>
            <summary>タイムモードをオン/オフにする。</summary>
        </member>
        <member name="M:GlobalCommands.VsMode(System.Boolean,System.Boolean,System.String,System.Boolean)">
            <name>VS Mode</name>
            <syntax>vsmode [state]</syntax>
            <summary>VSモードをオン/オフにする。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.ZenMode(System.Boolean,System.Boolean,System.String,System.Boolean)">
            <name>Zen Mode</name>
            <syntax>zenmode [state]</syntax>
            <summary>禅モードをオン/オフにする。</summary>
        </member>
        <member name="M:GlobalCommands.TrainingMode(System.Boolean,System.Boolean,System.String,System.Boolean)">
            <name>Training Mode</name>
            <syntax>trainingmode [state]</syntax>
            <summary>トレーニングモードをオン/オフにする。</summary>
        </member>
        <member name="M:GlobalCommands.ShowMode(System.String,System.Boolean)">
            <name>Show Mode</name>
            <syntax>mode</syntax>
            <summary>現在および次のゲームモードを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.ResetUser(System.String,System.String,System.Boolean)">
            <name>Reset User</name>
            <syntax>resetuser [users]</syntax>
            <summary>リーダーボード上の特定ユーザー情報を削除する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.VoteStart(System.String,System.Boolean)">
            <name>Start a vote</name>
            <syntax>vote [action]</syntax>
            <summary>投票を開始する</summary>
        </member>
        <member name="M:GlobalCommands.Vote(System.String,System.Boolean)">
            <name>Vote</name>
            <syntax>vote [choice]</syntax>
            <summary>はい/いいえで投票を行う。</summary>
        </member>
        <member name="M:GlobalCommands.RemoveVote(System.String)">
            <name>Remove vote</name>
            <syntax>vote remove</syntax>
            <summary>投票を削除する。</summary>
        </member>
        <member name="M:GlobalCommands.ShowVoteTime(System.String)">
            <name>Time left of vote</name>
            <syntax>vote time</syntax>
            <summary>残り投票可能時間を表示する。</summary>
        </member>
        <member name="M:GlobalCommands.CancelVote(System.String)">
            <name>Cancel vote</name>
            <syntax>vote cancel</syntax>
            <summary>投票をキャンセルする。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.ForceEndVote(System.String)">
            <name>Force-end vote</name>
            <syntax>vote forceend</syntax>
            <summary>投票を強制的に締め切る。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.OwnRank(System.String,System.Boolean)">
            <name>My Rank</name>
            <syntax>rank</syntax>
            <summary>現在のランクを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.SoloRank(System.Int32,System.String,System.Boolean)">
            <name>Get Solo Rank</name>
            <syntax>rank solo [rank]</syntax>
            <summary>現在のソロプレイにおけるランクを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.SoloRankByUser(System.String,System.String,System.Boolean)">
            <name>Get Solo Rank By User</name>
            <syntax>rank solo [user]</syntax>
            <summary>特定ユーザーのソロプレイにおけるランクを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.Rank(System.Int32,System.String,System.Boolean)">
            <name>Get Rank</name>
            <syntax>rank [rank]</syntax>
            <summary>特定ランクのユーザーを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.RankByUser(System.String,System.String,System.Boolean)">
            <name>Get Rank By User</name>
            <syntax>rank [user]</syntax>
            <summary>>特定ユーザーのランクを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.Log">
            <name>Get Previous Log</name>
            <syntax>log</syntax>
            <summary>前回の爆弾のログを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.LogNow(System.String,System.Boolean)">
            <name>Get Log</name>
            <syntax>lognow</syntax>
            <summary>現在のログを表示する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ShortURL(System.String,System.Boolean)">
            <name>Toggle Short URLs</name>
            <syntax>shorturl</syntax>
            <summary>Toggles shortened URLs.</summary>
        </member>
        <member name="M:GlobalCommands.BuildDate(System.String,System.Boolean)">
            <name>Build Date</name>
            <syntax>builddate</syntax>
            <summary>TPをビルドした日を表示する。</summary>
        </member>
        <member name="M:GlobalCommands.ReadSetting(System.String,System.String,System.Boolean)">
            <name>Read Setting</name>
            <syntax>readsetting [setting]</syntax>
            <summary>設定を読み込む。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.WriteSetting(System.String,System.String,System.String,System.Boolean)">
            <name>Write Setting</name>
            <syntax>writesetting [setting] [value]</syntax>
            <summary>設定を特定の値に設定する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.ReadModuleInformation(System.String,System.String,System.String,System.Boolean)">
            <name>Read Module Information</name>
            <syntax>readmodule [information] [module]</syntax>
            <summary>モジュールの情報を呼び出す。</summary>
        </member>
        <member name="M:GlobalCommands.WriteModuleInformation(System.String,System.String,System.String,System.String,System.Boolean)">
            <name>Write Module Information</name>
            <syntax>writemodule [information] [module] [value]</syntax>
            <summary>モジュールの情報を特定の値にする。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ResetSetting(System.String,System.String,System.Boolean)">
            <name>Reset Setting</name>
            <syntax>resetsetting [setting]</syntax>
            <summary>設定をデフォルトにする。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.BanUser(System.String,System.Int32,System.String,System.String,System.Boolean)">
            <name>Timeout User with Reason</name>
            <syntax>timeout [user] [length] [reason]</syntax>
            <summary>理由を含め、TPから一時的にユーザーをBANする。</summary>
            <argument name="length">How long the user should be banned for in seconds.</argument>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.BanUserForNoReason(System.String,System.Int32,System.String,System.Boolean)">
            <name>Timeout User</name>
            <syntax>timeout [user] [length]</syntax>
            <summary>TPから一時的にユーザーをBANする。</summary>
            <argument name="length">How long the user should be banned for in seconds.</argument>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.BanUser(System.String,System.String,System.String,System.Boolean)">
            <name>Ban User with Reason</name>
            <syntax>ban [user] [reason]</syntax>
            <summary>理由を含め、TPから永続的にユーザーをBANする。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.BanUserForNoReason(System.String,System.String,System.Boolean)">
            <name>Ban User</name>
            <syntax>ban [user]</syntax>
            <summary>TPから永続的にユーザーをBANする。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.UnbanUser(System.String,System.String,System.Boolean)">
            <name>Unban User</name>
            <syntax>unban [user]</syntax>
            <summary>ユーザーのBANを解除する。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.IsBanned(System.String,System.String,System.Boolean)">
            <name>Is Banned</name>
            <syntax>isbanned [users]</syntax>
            <summary>ユーザーがBANされているか確認する。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.AddRed(System.String)">
            <name>Add red Player</name>
            <syntax>addred [user]</syntax>
            <summary>VSモードで赤組に入れる</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.AddWhite(System.String)">
            <name>Add White Player</name>
            <syntax>addwhite [user]</syntax>
            <summary>VSモードで白組に入れる</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.JoinAnyTeam(System.String)">
            <name>Join Versus</name>
            <syntax>join</syntax>
            <summary>いずれかのチームに入る</summary>
        </member>
        <member name="M:GlobalCommands.ClearVSPlayers">
            <name>Clear Versus Players</name>
            <syntax>clearvsplayers</syntax>
            <summary>VSモードの人を削除する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ReadTeams">
            <name>Versus Players</name>
            <syntax>players</syntax>
            <summary>各チームのプレイヤー情報を送る。</summary>
        </member>
        <member name="M:GlobalCommands.JoinWantedTeam(System.String,System.String,System.Boolean)">
            <name>Join Team</name>
            <syntax>join [team]</syntax>
            <summary>組を指定して参加する。</summary>
        </member>
        <member name="M:GlobalCommands.AddRemoveRole(System.String,System.String,System.String,System.String,System.Boolean)">
            <name>Add/Remove Rank</name>
            <syntax>add [username] [rank]\nremove [username] [rank]</syntax>
            <summary>ユーザーに権限を追加または削除する。[rank]にはスペースで区切られた複数のランクを指定できる。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.Moderators(System.String,System.Boolean)">
            <name>Moderators</name>
            <syntax>moderators</syntax>
            <summary>「Mod」権限以上のユーザーを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.GetAccess(System.String,System.String,System.Boolean)">
            <name>Get Access</name>
            <syntax>getaccess [users]</syntax>
            <summary>特定のユーザーの権限情報を見る。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.RunHelp">
            <name>Run Help</name>
            <syntax>run</syntax>
            <summary>runコマンドの使い方を送る。</summary>
        </member>
        <member name="M:GlobalCommands.RunVSHP(System.String,System.Boolean,System.Int32,System.String,System.Int32,System.Int32,KMGameInfo)">
            <name>Run VS</name>
            <syntax>run [modules] [distribution] [Redhp] [Whitehp]</syntax>
            <summary>VSモードで実行する。</summary>
        </member>
        <member name="M:GlobalCommands.AddVSPlayer(System.String)">
            <name>Assign Any</name>
            <syntax>assignany [user]</syntax>
            <summary>特定ユーザーをVSモードのチームに割り当てる。割り当ては均等になるように行われる。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:GlobalCommands.RunSpecific(System.String,System.Boolean,System.String,System.Int32,KMGameInfo)">
            <name>Run Specific</name>
            <syntax>run [distribution] [modules]</syntax>
            <summary>設定されたモジュール数と分配で実行する。[distribution]には、vanilla, light, mixed, heavy, modsなどがある。。mixedlightやextralightのような組み合わせも可能。バニラすべてからMODモジュールすべてまで選べる。</summary>
        </member>
        <member name="M:GlobalCommands.RunMission(System.String,System.Boolean,System.String,KMGameInfo)">
            <name>Run Mission</name>
            <syntax>run [mission name]</syntax>
            <summary>特定名のミッションを実行する。「Mod」権限以上の場合、ミッションIDでも実行できる。</summary>
        </member>
        <member name="M:GlobalCommands.RunRaw(System.String)">
            <name>Run Raw</name>
            <syntax>runraw [mission id]</syntax>
            <summary>ミッションを完全なIDで実行する。例: mod_TwitchPlays_tpFMNHell,firsttime。必要なモジュールがミッションに含まれているか、IDが正しくない場合、ソフトロックされる。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.RunRawSeed(System.String,System.String)">
            <name>Run Raw Seed</name>
            <syntax>runrawseed [seed] [mission id]</syntax>
            <summary>runrawコマンドをルールシード付きで実行する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ProfileHelp(System.String,System.Boolean)">
            <name>Profile Help</name>
            <syntax>profile help</syntax>
            <summary>プロファイルコマンドのヘルプを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.ProfileEnable(System.String,System.String,System.Boolean)">
            <name>Profile Enable</name>
            <syntax>profile enable [name]</syntax>
            <summary>プロファイルを有効にする。</summary>
        </member>
        <member name="M:GlobalCommands.ProfileDisable(System.String,System.String,System.Boolean)">
            <name>Profile Disable</name>
            <syntax>profile disable [name]</syntax>
            <summary>プロファイルを無効にする。</summary>
        </member>
        <member name="M:GlobalCommands.ProfilesListEnabled(System.String,System.Boolean)">
            <name>Profile Enabled</name>
            <syntax>profile enabled</syntax>
            <summary>有効なプロファイル一覧を表示する。</summary>
        </member>
        <member name="M:GlobalCommands.ProfilesListAll(System.String,System.Boolean)">
            <name>Profile List</name>
            <syntax>profile list</syntax>
            <summary>利用可能なプロファイル一覧を表示する。</summary>
        </member>
        <member name="M:GlobalCommands.ProfileModule(System.String,System.Boolean,System.Boolean,System.String,System.String)">
            <name>Profile Add/Remove Module</name>
            <syntax>profile add [module] [profile]\nprofile remove [module] [profile]</syntax>
            <summary>プロファイルにモジュールを追加または削除する。[module] には部分的なモジュール名か ID を指定し、名前にスペースがある場合は引用符で囲むことで指定できる。[profile] はプロファイル名の一部でもよい。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ProfileCreate(System.String,System.Boolean,System.String,System.String)">
            <name>Profile Create</name>
            <syntax>profile create [profile] [module]</syntax>
            <summary>無効なモジュールを設定する新しいプロファイルを作成する。[profile] は新しいプロファイル名でなければいけない。[module] には部分的なモジュール名または ID を指定し、名前にスペースがある場合は引用符で囲むことで指定できる。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ProfileDelete(System.String,System.Boolean,System.String)">
            <syntax>profile delete [profile]</syntax>
            <summary>特定の名前のプロファイルを削除する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.ProfileDisabledBy(System.String,System.String,System.Boolean)">
            <name>Profile Disabled By</name>
            <syntax>profile disabled by [name]</syntax>
            <summary>プロファイルで無効になっているモジュールを表示する。</summary>
        </member>
        <member name="M:GlobalCommands.ModuleToggle(System.String,System.String,System.String,System.Boolean)">
            <name>Module Enable/Disable</name>
            <syntax>module enable [name]\nmodule disable name</syntax>
            <summary>爆弾に表示されるモジュールの有効化/無効化を自動的に行う</summary>
        </member>
        <member name="M:GlobalCommands.Holdables(System.String,System.Boolean)">
            <name>Holdables</name>
            <syntax>holdables</syntax>
            <summary>利用可能な持ち上げ可能物を表示する。</summary>
        </member>
        <member name="M:GlobalCommands.DisableModerators">
            <name>Disable Moderators</name>
            <syntax>disablemods</syntax>
            <summary>Disables all permission granted by the moderator rank.</summary>
            <restriction>Streamer</restriction>
        </member>
        <member name="M:GlobalCommands.EnableModerators">
            <name>Enable Moderators</name>
            <syntax>enablemods</syntax>
            <summary>モデレーター権限を有効にする。</summary>
            <restriction>Streamer</restriction>
        </member>
        <member name="M:GlobalCommands.ReloadData(System.String,System.Boolean)">
            <name>Reload Data</name>
            <syntax>reloaddata</syntax>
            <summary>TPで使用されているすべてのデータ(設定、アクセス権限なぢ)を再読込する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.ReloadScoreInfo(System.String,System.Boolean)">
            <name>Reload Score Info</name>
            <syntax>reloadscoreinfo</syntax>
            <summary>すべてのモジュールのスコア情報を再読込する。</summary>
            <restriction>ScoringManager</restriction>
        </member>
        <member name="M:GlobalCommands.SilenceMode">
            <name>Silence Mode</name>
            <syntax>silencemode</syntax>
            <summary>サイレントモードに切り替える。サイレントモードにすると、TPのチャットにメッセージを送れなくなる。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.Elevator">
            <name>Elevator</name>
            <syntax>elevator</syntax>
            <summary>エレベーターの現在の状態を表示する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.Elevator(System.String)">
            <name>Change Elevator</name>
            <syntax>elevator on\nelevator off\nelevator toggle</syntax>
            <summary>エレベーターの状態をオン/オフにする。</summary>
        </member>
        <member name="M:GlobalCommands.OptOut(System.String)">
            <name>Opt out</name>
            <syntax>optout</syntax>
            <summary>自信のランクとポイントを非表示にする。。</summary>
        </member>
        <member name="M:GlobalCommands.RestartGame">
            <name>Restart</name>
            <syntax>restart</syntax>
            <summary>ゲームを終了し、再起動する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.QuitGame">
            <name>Quit</name>
            <syntax>quit</syntax>
            <summary>KTANEを終了する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.CheckForUpdates">
            <name>Check For Updates</name>
            <syntax>checkforupdates</syntax>
            <summary>Dropbox上にTPの新しいビルドがあるかどうかを確認する。DropboxバージョンのTPを使用している場合のみ適用する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.Update(System.Boolean)">
            <name>Update</name>
            <syntax>update\nupdate force</syntax>
            <summary>利用可能なアップデートがある場合、それをインストールし、ゲームを再起動する。[force]を追加すると、利用可能なアップデートがあるかどうかに関係なくアップデートされる。DropboxバージョンのTPを使用している場合のみ適用される。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.Revert">
            <name>Update</name>
            <syntax>revert</syntax>
            <summary>以前のアップデートに戻す。DropboxバージョンのTPを使用している場合のみ適用される。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.ResetLeaderboard(System.String,System.Boolean)">
            <name>Reset Leaderboard</name>
            <syntax>leaderboard reset</syntax>
            <summary>リーダーボードのすべての情報を消去する。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.DisableWhitelist">
            <name>Disable Whitelist</name>
            <syntax>disablewhitelist</syntax>
            <summary>ホワイトリストを無効にする。</summary>
        </member>
        <member name="M:GlobalCommands.EnableWhitelist">
            <name>Enable Whitelist</name>
            <syntax>enablewhitelist</syntax>
            <summary>ホワイトリストを有効にする。</summary>
            <restriction>SuperUser</restriction>
        </member>
        <member name="M:GlobalCommands.Mimic(System.String,System.String,IRCMessage)">
            <name>Mimic</name>
            <syntax>mimic [player] [command]</syntax>
            <summary>特定のコマンドを他のプレイヤーが実行したように見せかける。同じランクかそれ以下のプレイヤーに対してのみ機能する。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.Skip">
            <name>Skip Command</name>
            <syntax>skipcommand</syntax>
            <summary>強制的に実行中のコマンドをスキップする。スタックしているコマンドをスキップするためにのみ使用することを推奨する。これは問題を引き起こす可能性があるため、使用には注意が必要である。</summary>
            <restriction>Admin</restriction>
        </member>
        <member name="M:GlobalCommands.RunCommandAs(System.String,System.String,System.String,System.String)">
            <name>Run as</name>
            <syntax>runas [color] [username]#[discrminator] [command]</syntax>
            <summary>コマンドを特定のDiscordユーザーとして実行する。Discord Playsのみ使用可能。</summary>
            <restriction>Streamer</restriction>
        </member>
        <member name="T:HoldableCommands">
            <summary>持ち上げ可能物に含まれるコマンド(フリープレイケースやバインダーを含む)</summary>
        </member>
        <member name="M:HoldableCommands.Help(TwitchHoldable,System.String,System.Boolean)">
            <name>Help</name>
            <syntax>help</syntax>
            <summary>持ち上げ可能物に対して実行可能なコマンドを表示する。</summary>
        </member>
        <member name="M:HoldableCommands.Hold(TwitchHoldable)">
            <name>Hold</name>
            <syntax>hold</syntax>
            <summary>持ち上げ可能物を持ち上げる。</summary>
        </member>
        <member name="M:HoldableCommands.Drop(TwitchHoldable)">
            <name>Drop</name>
            <syntax>drop</syntax>
            <summary>持ち上げ可能物を置く。</summary>
        </member>
        <member name="M:HoldableCommands.Flip(TwitchHoldable)">
            <name>Turn</name>
            <syntax>turn</syntax>
            <summary>持ち上げ可能物を回転させる。</summary>
        </member>
        <member name="M:HoldableCommands.Throw(FloatingHoldable,System.Nullable{System.Int32})">
            <name>Throw</name>
            <syntax>throw\nthrow 10</syntax>
            <summary>持ち上げ可能物をある強さで投げる。</summary>
        </member>
        <member name="T:IRCConnectionManagerCommands">
            <summary>チャット接続用バインダーのコマンド</summary>
        </member>
        <member name="M:IRCConnectionManagerCommands.Disconnect(TwitchHoldable,System.String,System.Boolean)">
            <name>Disconnect</name>
            <syntax>disconnect</syntax>
            <summary>「Disconnect」ボタンを押す。</summary>
            <restriction>Streamer</restriction>
        </member>
        <member name="T:MissionBinderCommands">
            <summary>ミッションバインダー関連のコマンド</summary>
            <prefix>binder </prefix>
        </member>
        <member name="M:MissionBinderCommands.Select(FloatingHoldable)">
            <name>Select</name>
            <syntax>select</syntax>
            <summary>現在選択中のアイテムを選ぶ。</summary>
        </member>
        <member name="M:MissionBinderCommands.SelectIndex(FloatingHoldable,System.Int32)">
            <name>Select Index</name>
            <syntax>select [index]</syntax>
            <summary>メニュー内の上からindex番目のアイテムを選ぶ。</summary>
        </member>
        <member name="M:MissionBinderCommands.SelectSearch(FloatingHoldable,System.String)">
            <name>Select Text</name>
            <syntax>select [text]</syntax>
            <summary>特定のテキストのアイテムを選択する(サブセクションまたは名前)</summary>
        </member>
        <member name="M:MissionBinderCommands.Navigate(System.String,System.Nullable{System.Int32})">
            <name>Up / Down</name>
            <syntax>up (amount)\ndown (amount)</syntax>
            <summary>特定の回数バインダー内を上下に移動する。</summary>
        </member>
        <member name="M:MissionBinderCommands.Search(FloatingHoldable,System.String)">
            <name>Search</name>
            <syntax>search [query]</syntax>
            <summary>バインダーからミッションを探す。</summary>
        </member>
        <member name="T:ModuleCommands">
            <summary>爆弾起動中に使えるコマンド</summary>
        </member>
        <member name="M:ModuleCommands.Help(TwitchModule,System.Boolean)">
            <name>Help</name>
            <syntax>help</syntax>
            <summary>モジュール解除に使用できるコマンドを表示する。</summary>
            <restriction>SolvedAllowed</restriction>
        </member>
        <member name="M:ModuleCommands.Player(TwitchModule,System.String)">
            <name>Player</name>
            <syntax>player</syntax>
            <summary>どのユーザーがそのモジュールに割り当てられているかを表示する。</summary>
            <restriction>SolvedAllowed</restriction>
        </member>
        <member name="M:ModuleCommands.BombTurnAround(TwitchModule)">
            <name>Queue Flip</name>
            <syntax>queue flip</syntax>
            <summary>モジュールが解除された後に爆弾を裏返すようにキューに追加する。</summary>
        </member>
        <member name="M:ModuleCommands.BombTurnAroundCancel(TwitchModule)">
            <name>Cancel Queued Flip</name>
            <syntax>cancel queue flip</syntax>
            <summary>モジュールが解除された後に行われる直前の回転をキューから取り消す。</summary>
        </member>
        <member name="M:ModuleCommands.Claim(TwitchModule,System.String,System.Boolean)">
            <name>Claim</name>
            <syntax>claim</syntax>
            <summary>モジュールの割り当てや、割り当て済みのモジュールに対して割り当てのキューを行う。</summary>
        </member>
        <member name="M:ModuleCommands.Unview(TwitchModule)">
            <name>Unview</name>
            <syntax>unview</syntax>
            <summary>カメラによるモジュールの表示を停止する。</summary>
        </member>
        <member name="M:ModuleCommands.View(TwitchModule,System.String,System.String)">
            <name>View / ViewPin</name>
            <syntax>view\nviewpin</syntax>
            <summary>専用画面でモジュールを表示する。viewpinはモデレーター以上であるか、いつでもピン可能なモジュールである必要である。</summary>
        </member>
        <member name="M:ModuleCommands.Solve(TwitchModule,System.String)">
            <name>Solve</name>
            <syntax>solve</syntax>
            <summary>モジュールを強制的に解除する。「Admin」権限またはTP解除不可モジュールである必要がある。</summary>
        </member>
        <member name="M:ModuleCommands.VoteSolve(TwitchModule,System.String)">
            <name>Votesolve</name>
            <syntax>votesolve</syntax>
            <summary>モジュールの解除に関する投票を開始する。</summary>
        </member>
        <member name="M:ModuleCommands.ClaimViewPin(TwitchModule,System.String,System.Boolean,System.String)">
            <name>Claim View Pin</name>
            <syntax>claim view pin\ncvp</syntax>
            <summary>モジュールを割り当て＆表示＆ピン留めする。3つのアクションのうちいずれかを取り除いてもいい。(claim view = cvなど)</summary>
        </member>
        <member name="M:ModuleCommands.Unclaim(TwitchModule,System.String,System.String)">
            <name>Unclaim</name>
            <syntax>unclaim\nunclaim unview</syntax>
            <summary>モジュールの割り当てや予約済み割り当てを解除する。unclaim unviewでは、モジュールの非表示も行われる。</summary>
        </member>
        <member name="M:ModuleCommands.Solved(TwitchModule,System.String)">
            <name>Solved</name>
            <syntax>solved</syntax>
            <summary>モジュールのIDタグの色を緑に変更し、「解除済み」であることを示す。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:ModuleCommands.Assign(TwitchModule,System.String,System.String)">
            <name>Assign</name>
            <syntax>assign [username]</syntax>
            <summary>モジュールを他のユーザーに割り当てる。通常は「Mod」権限が必要だが、そのモジュールが割り当てられている場合、他のユーザーに割り当てることができる。</summary>
        </member>
        <member name="M:ModuleCommands.Take(TwitchModule,System.String,System.Boolean)">
            <name>Take</name>
            <syntax>take</syntax>
            <summary>モジュールを割り当てられている人に割り当てを解除するように要求する。</summary>
        </member>
        <member name="M:ModuleCommands.Mine(TwitchModule,System.String,System.Boolean)">
            <name>Mine</name>
            <syntax>mine</syntax>
            <summary>まだそのモジュールを担当していることを知らせる。割り当てをしている本人のみ、takeコマンドの内容を取り消すことができる。</summary>
        </member>
        <member name="M:ModuleCommands.CancelTake(TwitchModule,System.String,System.Boolean)">
            <name>Cancel Take</name>
            <syntax>canceltake</syntax>
            <summary>takeコマンドを取り消す。割り当てを行ったプレイヤーもしくは「Mod」権限以上のプレイヤーのみ行える。</summary>
        </member>
        <member name="M:ModuleCommands.Points(TwitchModule)">
            <name>Points</name>
            <syntax>points</syntax>
            <summary>モジュールのポイントを確認する。</summary>
            <restrictions>SolvedAllowed</restrictions>
        </member>
        <member name="M:ModuleCommands.Mark(TwitchModule)">
            <name>Mark</name>
            <syntax>mark</syntax>
            <summary>モジュールのIDタグの色を黒に変更する。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:ModuleCommands.Unmark(TwitchModule)">
            <name>Unmark</name>
            <syntax>unmark</syntax>
            <summary>モジュールのIDタグの色をもとに戻す。</summary>
            <restriction>Mod</restriction>
        </member>
        <member name="M:ModuleCommands.DefaultCommand(TwitchModule,System.String,System.String)">
            <name>Zoom, Superzoom, Show and Tilt</name>
            <syntax>zoom (duration) (command)\nsuperzoom (factor) (x) (y) (duration) (command)\ntilt (direction) (angle) (command)\nshow</syntax>
            <summary>x秒モジュールを拡大する。コマンドを繋げて、ズームしながらコマンドを実行することも出来る。
             superzoomはズームをよりコントロールできる。(factor)は倍率、(x)と(y)はカメラの位置をコントロールする。(0, 0)は左下、(1, 1)は右上に対応する。例：superzoom 3 0.5 0.5 20 = 3倍で(0.5 0.5、中央)を20秒間ズームする。
            Tiltはモジュールのカメラをその方向に傾けて見やすくする。傾ける方向は8方向の英単語もしくは任意の数(0=真上、時計回りにすすめる)を指定できる。(angle)は傾きの度合いを0~90で設定する。例：tilt 60 90 = 時計回り60度方向から真横まで傾ける。
            Showコマンドは爆弾を選択する。
            Zoom Tilt、Superzoom Tilt、Zoom Show、Superzoom Showは繋げて入力することで、同時に行うことが出来る。
            </summary>
        </member>
        <member name="T:PostGameCommands">
            <summary>ゲーム終了後の画面で使えるコマンド</summary>
        </member>
        <member name="M:PostGameCommands.Continue">
            <name>Continue / Back</name>
            <syntax>continue\nback</syntax>
            <summary>続ける/戻るボタンを押す。</summary>
        </member>
        <member name="M:PostGameCommands.Retry(System.String,System.Boolean)">
            <name>Retry</name>
            <syntax>retry</syntax>
            <summary>ミッションをリトライする。</summary>
        </member>
        <member name="M:ComponentSolverFactory.CreateModComponentSolver(TwitchModule,System.String,System.String)">
            <summary>Returns the solver for a specific module. If there is a shim or a built-in solver, it will return that.</summary>
        </member>
        <member name="M:ComponentSolverFactory.CreateDefaultModComponentSolver(TwitchModule,System.String,System.String,System.Boolean)">
            <summary>Returns a solver that relies on the module’s own implementation, bypassing built-in solvers and shims.</summary>
        </member>
        <member name="M:GeneralExtensions.Flatten(System.Collections.IEnumerator)">
            <summary>Enumerates an IEnumerator while flattening any nested IEnumerators.</summary>
        </member>
        <member name="M:GeneralExtensions.AddSafe``2(System.Collections.Generic.IDictionary{``0,System.Collections.Generic.List{``1}},``0,``1)">
            <summary>
                Adds an element to a List&lt;V&gt; stored in the current IDictionary&lt;K, List&lt;V&gt;&gt;. If the specified key
                does not exist in the current IDictionary, a new List is created.</summary>
            <typeparam name="K">
                Type of the key of the IDictionary.</typeparam>
            <typeparam name="V">
                Type of the values in the Lists.</typeparam>
            <param name="dic">
                IDictionary to operate on.</param>
            <param name="key">
                Key at which the list is located in the IDictionary.</param>
            <param name="value">
                Value to add to the List located at the specified Key.</param>
        </member>
        <member name="M:GeneralExtensions.IndexOf``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.Boolean})">
            <summary>
                Returns the index of the first element in this <paramref name="source"/> satisfying the specified <paramref
                name="predicate"/>. If no such elements are found, returns <c>-1</c>.</summary>
        </member>
        <member name="M:GeneralExtensions.SplitFull(System.String,System.Char[])">
            <summary>Splits a string using the <paramref name="seperator"/> provided and removing empty entries.</summary>
            <param name="value">The string to split.</param>
            <param name="seperator">The seperators to split by.</param>
        </member>
        <member name="M:GeneralExtensions.ToIndex(System.Char)">
            <summary>Converts a lowercase <paramref name="character"/> into a zero-based index. Supports a-z and 1-9.</summary>
            <param name="character">The character to convert into a index.</param>
        </member>
        <member name="M:GeneralExtensions.FirstOrWhole(System.String,System.String)">
            <summary>Checks if <paramref name="value"/> has the same first letter or is equal to <paramref name="match"/>.</summary>
            <param name="value">The string to check against the match.</param>
            <param name="match">The string to match.</param>
        </member>
        <member name="M:GeneralExtensions.MoveToSafe(System.IO.DirectoryInfo,System.IO.DirectoryInfo)">
            <summary>
            Safer version of <see cref="M:System.IO.DirectoryInfo.MoveTo(System.String)"/> as it works across drives. Achieved by <see cref="M:GeneralExtensions.CopyTo(System.IO.DirectoryInfo,System.IO.DirectoryInfo)"/> and then <see cref="M:System.IO.DirectoryInfo.Delete(System.Boolean)"/>.
            </summary>
            <param name="directoryInfo">The source directory.</param>
            <param name="destDir">The destination directory path.</param>
        </member>
        <member name="T:KModkit.KMBombInfoExtensions">
            <summary>
            Some helper extensions methods for the KMBombInfo class.
            </summary>
        </member>
        <member name="M:IRCMessage.Duplicate(System.String)">
            <summary>
            Creates a duplicate <see cref="T:IRCMessage">Message</see> object with the Text changed.
            </summary>
            <param name="text">The Message's new text.</param>
            <returns>Returns a duplicate <see cref="T:IRCMessage">Message</see> object with the new Text.</returns>
        </member>
        <member name="T:IRCConnection.NetworkStreamLineReader">
            <summary>
            A <see cref="T:System.IO.TextReader"/> that reads lines from a <see cref="T:System.Net.Sockets.NetworkStream"/> and will check to see if any data is available to avoid blocking.
            Allows you specify a separate stream to read from if you have another stream (like a <see cref="T:System.Net.Security.SslStream"/>) wrapping your <see cref="T:System.Net.Sockets.NetworkStream"/>.
            </summary>
        </member>
        <member name="M:IRCConnection.NetworkStreamLineReader.ReadLine">
            <summary>
            Attempts to read a line from the <see cref="T:System.IO.Stream"/>. Returns null if a line isn't available.
            </summary>
        </member>
        <member name="T:LeaderboardController">
            <summary>
            Controls whether or not records will be saved to the leaderboard and if stats can be changed.
            Call <see cref="M:LeaderboardController.Install"/> to set it up and then call <see cref="M:LeaderboardController.DisableLeaderboards"/> to disable the leaderboards.
            Leaderboards will re-enabled once the game goes back to the setup state. Make sure to disable them again after that if they should still be disabled.
            </summary>
        </member>
        <member name="M:LeaderboardController.Install">
            <summary>Installs everything necessary to work and only needs to be called once. Records will still be saved if this is not called.</summary>
        </member>
        <member name="M:LeaderboardController.DisableLeaderboards">
            <summary>
            Disables records being saved to leaderboards and stat changes.
            Leaderboards are re-enabled once the game goes back to the setup state.
            Make sure to disable them again after that if they should still be disabled
            </summary>
        </member>
        <member name="T:MainThreadQueue">
            <summary>
            Allows the execution of a function with the guarantee that it will run on Unity's mainthread.
            </summary>
        </member>
        <member name="M:MainThreadQueue.Initialize">
            <summary>
            Stores the current thread ID, allowing enqueued functions to execute immediately if they were already on Unity's mainthread.
            Must be called from Unity's mainthread to work properly.
            </summary>
        </member>
        <member name="M:MainThreadQueue.ProcessQueue">
            <summary>
            Runs all enqueued functions.
            Must be called from Unity's mainthread to work properly.
            </summary>
        </member>
        <member name="T:ModdedAPI">
            <summary>A class to add and access shared modded APIs for things like exploding the bomb.</summary>
        </member>
        <member name="M:ModdedAPI.AddProperty(System.String,System.Func{System.Object},System.Action{System.Object})">
            <summary>
            Adds a new property with a getter and setter. The getter or setter can be null.
            If at anytime you can't handle a property, disable the property using <see cref="M:ModdedAPI.SetEnabled(System.Object,System.Boolean)"/>.
            </summary>
            <param name="name">The name of the property.</param>
            <param name="get">The getter of the property.</param>
            <param name="set">The setter of the property.</param>
            <returns>An object that represents the property. Used in <see cref="M:ModdedAPI.SetEnabled(System.Object,System.Boolean)"/>.</returns>
        </member>
        <member name="M:ModdedAPI.SetEnabled(System.Object,System.Boolean)">
            <summary>Sets whether or not a property is enabled. This allows other mods to handle the property instead.</summary>
            <param name="property">The property object from the <see cref="M:ModdedAPI.AddProperty(System.String,System.Func{System.Object},System.Action{System.Object})"/> method.</param>
            <param name="enabled">Whether or not the property should be enabled or disabled.</param>
        </member>
        <member name="M:ModdedAPI.TryGetAs``1(System.String,``0@)">
            <summary>Gets a value from a property.</summary>
            <typeparam name="T">The type of the value.</typeparam>
            <param name="name">The name of the property.</param>
            <param name="value">The variable to put the value into.</param>
            <returns>Whether or not a value was read succesfully.</returns>
        </member>
        <member name="M:ModdedAPI.TrySet(System.String,System.Object)">
            <summary>Sets a value to a property.</summary>
            <param name="name">The name of the property.</param>
            <param name="value">The value to put into the property.</param>
            <returns>Whether or not a value was written sucessfully.</returns>
        </member>
        <member name="T:System.IO.Compression.ZipStorer">
            <summary>
            Unique class for compression/decompression file. Represents a Zip file.
            </summary>
        </member>
        <member name="T:System.IO.Compression.ZipStorer.Compression">
            <summary>
            Compression method enumeration
            </summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.Compression.Store">
            <summary>Uncompressed storage</summary> 
        </member>
        <member name="F:System.IO.Compression.ZipStorer.Compression.Deflate">
            <summary>Deflate compression method</summary>
        </member>
        <member name="T:System.IO.Compression.ZipStorer.ZipFileEntry">
            <summary>
            Represents an entry in Zip file directory
            </summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.Method">
            <summary>Compression method</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.FilenameInZip">
            <summary>Full path and filename as stored in Zip</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.FileSize">
            <summary>Original file size</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.CompressedSize">
            <summary>Compressed file size</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.HeaderOffset">
            <summary>Offset of header information inside Zip storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.FileOffset">
            <summary>Offset of file inside Zip storage</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.HeaderSize">
            <summary>Size of header information</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.Crc32">
            <summary>32-bit checksum of entire file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.ModifyTime">
            <summary>Last modification time of file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.CreationTime">
            <summary>Creation time of file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.AccessTime">
            <summary>Last access time of file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.Comment">
            <summary>User comment for file</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ZipFileEntry.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ZipFileEntry.ToString">
            <summary>Overriden method</summary>
            <returns>Filename in Zip</returns>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.EncodeUTF8">
            <summary>True if UTF8 encoding for filename and comments, false if default (CP 437)</summary>
        </member>
        <member name="F:System.IO.Compression.ZipStorer.ForceDeflating">
            <summary>Force deflate algotithm even if it inflates the stored file. Off by default.</summary>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Create(System.String,System.String)">
            <summary>
            Method to create a new storage file
            </summary>
            <param name="_filename">Full path of Zip file to create</param>
            <param name="_comment">General comment for Zip file</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Create(System.IO.Stream,System.String,System.Boolean)">
            <summary>
            Method to create a new zip storage in a stream
            </summary>
            <param name="_stream"></param>
            <param name="_comment"></param>
            <param name="_leaveOpen">true to leave the stream open after the ZipStorer object is disposed; otherwise, false (default).</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Open(System.String,System.IO.FileAccess)">
            <summary>
            Method to open an existing storage file
            </summary>
            <param name="_filename">Full path of Zip file to open</param>
            <param name="_access">File access mode as used in FileStream constructor</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Open(System.IO.Stream,System.IO.FileAccess,System.Boolean)">
            <summary>
            Method to open an existing storage from stream
            </summary>
            <param name="_stream">Already opened stream with zip contents</param>
            <param name="_access">File access mode for stream operations</param>
            <param name="_leaveOpen">true to leave the stream open after the ZipStorer object is disposed; otherwise, false (default).</param>
            <returns>A valid ZipStorer object</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.AddFile(System.IO.Compression.ZipStorer.Compression,System.String,System.String,System.String)">
            <summary>
            Add full contents of a file into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_pathname">Full path of file to add to Zip storage</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_comment">Comment for stored file</param>        
        </member>
        <member name="M:System.IO.Compression.ZipStorer.AddStream(System.IO.Compression.ZipStorer.Compression,System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage
            </summary>
            <remarks>Same parameters and return value as AddStreamAsync()</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.AddStreamAsync(System.IO.Compression.ZipStorer.Compression,System.String,System.IO.Stream,System.DateTime,System.String)">
            <summary>
            Add full contents of a stream into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_filenameInZip">Filename and path as desired in Zip directory</param>
            <param name="_source">Stream object containing the data to store in Zip</param>
            <param name="_modTime">Modification time of the data to store</param>
            <param name="_comment">Comment for stored file</param>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.AddDirectory(System.IO.Compression.ZipStorer.Compression,System.String,System.String,System.String)">
            <summary>
            Add full contents of a directory into the Zip storage
            </summary>
            <param name="_method">Compression method</param>
            <param name="_pathname">Full path of directory to add to Zip storage</param>
            <param name="_pathnameInZip">Path name as desired in Zip directory</param>
            <param name="_comment">Comment for stored directory</param>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Close">
            <summary>
            Updates central directory (if pertinent) and close the Zip storage
            </summary>
            <remarks>This is a required step, unless automatic dispose is used</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ReadCentralDir">
            <summary>
            Read all the file records in the central directory 
            </summary>
            <returns>List of all entries in directory</returns>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ExtractFile(System.IO.Compression.ZipStorer.ZipFileEntry,System.String)">
            <summary>
            Copy the contents of a stored file into a physical file
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_filename">Name of file to store uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ExtractFile(System.IO.Compression.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <remarks>Same parameters and return value as ExtractFileAsync</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ExtractFileAsync(System.IO.Compression.ZipStorer.ZipFileEntry,System.IO.Stream)">
            <summary>
            Copy the contents of a stored file into an opened stream
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_stream">Stream to store the uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.ExtractFile(System.IO.Compression.ZipStorer.ZipFileEntry,System.Byte[]@)">
            <summary>
            Copy the contents of a stored file into a byte array
            </summary>
            <param name="_zfe">Entry information of file to extract</param>
            <param name="_file">Byte array with uncompressed data</param>
            <returns>True if success, false if not.</returns>
            <remarks>Unique compression methods are Store and Deflate</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.RemoveEntries(System.IO.Compression.ZipStorer@,System.Collections.Generic.List{System.IO.Compression.ZipStorer.ZipFileEntry})">
            <summary>
            Removes one of many files in storage. It creates a new Zip file.
            </summary>
            <param name="_zip">Reference to the current Zip object</param>
            <param name="_zfes">List of Entries to remove from storage</param>
            <returns>True if success, false if not</returns>
            <remarks>This method only works for storage of type FileStream</remarks>
        </member>
        <member name="M:System.IO.Compression.ZipStorer.Dispose">
            <summary>
            Closes the Zip file stream
            </summary>
        </member>
        <member name="M:Leaderboard.GetTrueRank(System.String)">
            <summary>Gets a user's true rank. True rank doesn't rank/sort the user differently if they have opted out.</summary>
        </member>
        <member name="M:Leaderboard.GetVSEntries">
            <summary>Gets all leaderboard entries that have a non-null team set for VS mode.</summary>
        </member>
        <member name="T:TwitchGame">
            <summary>Encapsulates an ongoing game, with all its bombs, module cameras, HUDs etc.</summary>
        </member>
        <member name="M:TwitchPlaysService.AddHoldable(System.String,FloatingHoldable,System.Type,System.Boolean)">
            <summary>Adds a holdable, ensuring that the ID in <see cref="F:TwitchPlaysService.Holdables"/> is the same as the one in it's <see cref="T:TwitchHoldable"/>.</summary>
        </member>
        <member name="M:TwitchPlaysService.AddStateCoroutine(System.Collections.IEnumerator)">
            <summary>Adds a coroutine that will run when the state changes.</summary>
        </member>
        <member name="F:CameraPriority.Unviewed">
            <summary>This module is unviewed.</summary>
        </member>
        <member name="F:CameraPriority.Interacted">
            <summary>This module has been interacted with.</summary>
        </member>
        <member name="F:CameraPriority.Claimed">
            <summary>This module is claimed.</summary>
        </member>
        <member name="F:CameraPriority.Viewed">
            <summary>This module is explicitly viewed.</summary>
        </member>
        <member name="F:CameraPriority.Pinned">
            <summary>This module is pinned.</summary>
        </member>
        <member name="F:ModuleCameras.DefaultCameraLayer">
            <summary>
                Camera layer used on all modules/cameras when interactive mode is enabled.</summary>
            <remarks>
                This needs to be 11 because that’s what KTANE expects for interactables.</remarks>
        </member>
        <member name="F:ModuleCameras.ModuleCamera.CameraLayer">
            <summary>Camera layer used when interactive mode is NOT enabled.</summary>
        </member>
        <member name="M:ModuleCameras.UpdateAutomaticCameraWall">
            <summary>Updates the state of the camera wall.
            7 or more claimed modules and input is disabled, enables the camera wall.
            4 or fewer claimed modules, or 6 or fewer unsolved modules in total, disables the camera wall.</summary>
            <returns>Whether or not the camera wall just got enabled because of the update.</returns>
        </member>
        <member name="T:TwitchBomb">
            <summary>Encapsulates a bomb (of which there may be multiple in a game).</summary>
        </member>
    </members>
</doc>
